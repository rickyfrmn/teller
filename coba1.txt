<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Sistem Antrian Teller</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      padding: 20px;
      max-width: 800px;
      margin: auto;
    }
    .card {
      background: white;
      padding: 20px;
      margin-bottom: 20px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      border-radius: 10px;
    }
    .card h1, .card h2 {
      margin-bottom: 15px;
    }
    .queue-item {
      display: flex;
      justify-content: space-between;
      padding: 5px 0;
      border-bottom: 1px solid #eee;
    }
    button {
      background-color: #007bff;
      color: white;
      border: none;
      padding: 10px 20px;
      cursor: pointer;
      border-radius: 5px;
      margin: 5px;
    }
    button:hover {
      background-color: #0056b3;
    }
    .loket-buttons {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      flex-direction: column;
    }
    .loket-control {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
      align-items: center;
    }
  </style>
</head>
<body>
  <div class="card">
    <h1>Sistem Antrian Teller</h1>
    <div class="loket-buttons" id="loket-buttons"></div>
    <div id="current-call"></div>
  </div>

  <div class="card">
    <h2>Daftar Antrian</h2>
    <div id="queue-list"></div>
  </div>

  <script>
    let queue = [];
    let lastNumberA = 0;
    let lastNumberB = 0;

    const counters = [
      { id: 1, code: 'LKT-01' },
      { id: 2, code: 'LKT-02' },
      { id: 3, code: 'LKT-03' },
      { id: 4, code: 'LKT-04' },
      { id: 5, code: 'LKT-05' },
      { id: 6, code: 'LKT-06' },
      { id: 7, code: 'LKT-07' },
      { id: 8, code: 'LKT-08' }
    ];

    function speak(text) {
      const utterance = new SpeechSynthesisUtterance(text);
      utterance.lang = 'id-ID';
      speechSynthesis.speak(utterance);
    }

    function updateQueueDisplay() {
      const queueList = document.getElementById('queue-list');
      queueList.innerHTML = '';
      queue.forEach(item => {
        const div = document.createElement('div');
        div.className = 'queue-item';
        const counterLabel = item.counter ? item.counter.code + ` (dipanggil ${item.calls}x)` : 'Belum dipanggil';
        div.innerHTML = `<span>${item.number}</span><span>${counterLabel}</span>`;
        queueList.appendChild(div);
      });
    }

    function callFromCounter(counterId) {
      const counter = counters.find(c => c.id === counterId);
      const isALoket = ['01', '03', '05', '07'].includes(counter.code.slice(-2));
      const prefix = isALoket ? 'A' : 'B';
      const lastNum = isALoket ? ++lastNumberA : ++lastNumberB;
      const number = prefix + String(lastNum).padStart(3, '0');

      const newItem = { number, counter, calls: 1 };
      queue.push(newItem);

      document.getElementById('current-call').innerHTML = `
        <p>Nomor Antrian: <strong>${newItem.number}</strong></p>
        <p>Loket: <strong>${counter.code}</strong></p>
      `;

      speak(`Nomor antrian ${newItem.number}, silakan menuju ${counter.code}`);
      updateQueueDisplay();
    }

    function recallFromCounter(counterId) {
      const counter = counters.find(c => c.id === counterId);
      let item = [...queue].reverse().find(item => item.counter?.id === counterId);

      if (item) {
        item.calls++;
        document.getElementById('current-call').innerHTML = `
          <p>Memanggil ulang Nomor Antrian: <strong>${item.number}</strong></p>
          <p>Loket: <strong>${counter.code}</strong> (${item.calls}x)</p>
        `;
        speak(`Memanggil ulang, nomor antrian ${item.number}, silakan menuju ${counter.code}`);
      } else {
        document.getElementById('current-call').innerHTML = `<p>Tidak ada antrian untuk dipanggil ulang di ${counter.code}</p>`;
        speak(`Tidak ada antrian untuk dipanggil ulang di ${counter.code}`);
      }
      updateQueueDisplay();
    }

    function renderLoketButtons() {
      const container = document.getElementById('loket-buttons');
      counters.forEach(counter => {
        const wrapper = document.createElement('div');
        wrapper.className = 'loket-control';

        const callBtn = document.createElement('button');
        callBtn.textContent = `Panggil - ${counter.code}`;
        callBtn.onclick = () => callFromCounter(counter.id);

        const recallBtn = document.createElement('button');
        recallBtn.textContent = `Ulang - ${counter.code}`;
        recallBtn.onclick = () => recallFromCounter(counter.id);

        wrapper.appendChild(callBtn);
        wrapper.appendChild(recallBtn);

        container.appendChild(wrapper);
      });
    }

    renderLoketButtons();
    updateQueueDisplay();
  </script>
</body>
</html>
